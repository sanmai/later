# yamllint disable rule:line-length
# yamllint disable rule:braces

name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - main

env:
  COMPOSER_ROOT_VERSION: dev-main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2', '8.3']
        coverage: ['pcov']

    name: Test with PHP ${{ matrix.php-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: ${{ matrix.coverage }}
          tools: composer:v2

      - name: Validate composer.json
        run: |
          composer validate --strict

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/composer
          key: composer-${{ matrix.php-version }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ matrix.php-version }}-
            composer-

      - name: Install dependencies
        run: |
          composer remove --no-update --dev --no-interaction --no-progress \
            phan/phan phpstan/phpstan vimeo/psalm \
            infection/infection friendsofphp/php-cs-fixer
          composer update --prefer-dist --no-interaction --no-progress ${{ matrix.dependencies }}

      - name: Execute tests
        run: |
          php vendor/bin/phpunit

  validate:
    name: Static Analysis and Validation
    runs-on: ubuntu-latest

    env:
      PHP_VERSION: '8.2'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: ast
          coverage: pcov
          tools: composer:v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/composer
          key: composer-${{ env.PHP_VERSION }}-${{ hashFiles('composer.*') }}
          restore-keys: |
            composer-${{ env.PHP_VERSION }}-
            composer-

      - name: Install dependencies
        run: |
          composer update --prefer-dist --no-interaction --no-progress

      - name: Validate composer.json
        run: |
          make composer-validate

      - name: Static Analysis
        run: |
          make ci-analyze --keep-going

      - name: Upload coverage report
        continue-on-error: false
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          php vendor/bin/php-coveralls -v

  coding-standards:
    name: Coding Standards
    runs-on: ubuntu-latest

    env:
      PHP_VERSION: '8.2'
      PHP_CS_FIXER_VERSION: 'v3.35.1'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: php-cs-fixer:${{ env.PHP_CS_FIXER_VERSION }}

      - name: Restore PHP-CS-Fixer cache
        uses: actions/cache@v2
        with:
          path: .php_cs.cache
          key: php-cs-fixer
          restore-keys: php-cs-fixer

      - name: Run PHP-CS-Fixer, version ${{ env.PHP_CS_FIXER_VERSION }}
        run: |
          php-cs-fixer fix --diff --dry-run --verbose
